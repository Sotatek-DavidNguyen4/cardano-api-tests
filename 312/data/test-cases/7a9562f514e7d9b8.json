{"uid":"7a9562f514e7d9b8","name":"verify that get list contract successfully","fullName":"tests.contract.TestJsonSchema.getListParamSuccess","historyId":"cfb058b6d937b17b8bcce18372b66d5d","time":{"start":1687168109300,"stop":1687168113248,"duration":3948},"status":"broken","statusMessage":"Schema to use cannot be null","statusTrace":"java.lang.IllegalArgumentException: Schema to use cannot be null\n\tat io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)\n\tat io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)\n\tat io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)\n\tat httprequest.HttpRequest.verifyJsonSchema(HttpRequest.java:600)\n\tat microservices.contract.steps.ContractSteps.verifyJsonSchemaContract(ContractSteps.java:33)\n\tat tests.contract.TestJsonSchema.getListParamSuccess(TestJsonSchema.java:44)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"preconditions","time":{"start":1687168013260,"stop":1687168013999,"duration":739},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1687168109299,"stop":1687168109299,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"Schema to use cannot be null","statusTrace":"java.lang.IllegalArgumentException: Schema to use cannot be null\n\tat io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)\n\tat io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)\n\tat io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)\n\tat httprequest.HttpRequest.verifyJsonSchema(HttpRequest.java:600)\n\tat microservices.contract.steps.ContractSteps.verifyJsonSchemaContract(ContractSteps.java:33)\n\tat tests.contract.TestJsonSchema.getListParamSuccess(TestJsonSchema.java:44)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[{"name":"get list contract","time":{"start":1687168109300,"stop":1687168111350,"duration":2050},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"paramsContract","value":"{size=[2], page=[2]}"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Verify contract response","time":{"start":1687168111351,"stop":1687168111351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"contract","value":"Contract(data=[DataContract(address=addr1w9qzpelu9hn45pefc0xr4ac4kdxeswq7pndul2vuj59u8tqaxdznu, txCount=597702.0, balance=1.0325494950909E13), DataContract(address=addr1z8jd97ct35n4s5ss8lt4sq0zclw0dmf7yak8fj46m0jm3djv95lqhj0agy8awy9g82v0r6qatxdz9kza4m94sqyunvssgdq8ua, txCount=10.0, balance=7.501516E12)], totalItems=46133, totalPages=23067, currentPage=2)"},{"name":"params","value":"{size=[2], page=[2]}"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"verify response data not null","time":{"start":1687168111351,"stop":1687168111351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"dataContracts","value":"[DataContract(address=addr1w9qzpelu9hn45pefc0xr4ac4kdxeswq7pndul2vuj59u8tqaxdznu, txCount=597702.0, balance=1.0325494950909E13), DataContract(address=addr1z8jd97ct35n4s5ss8lt4sq0zclw0dmf7yak8fj46m0jm3djv95lqhj0agy8awy9g82v0r6qatxdz9kza4m94sqyunvssgdq8ua, txCount=10.0, balance=7.501516E12)]"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"get list contract Response","time":{"start":1687168111351,"stop":1687168113241,"duration":1890},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"paramsContract","value":"{size=[2], page=[2]}"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"verify Json Schema","time":{"start":1687168113241,"stop":1687168113248,"duration":7},"status":"broken","statusMessage":"Schema to use cannot be null","statusTrace":"java.lang.IllegalArgumentException: Schema to use cannot be null\n\tat io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)\n\tat io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)\n\tat io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)\n\tat io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)\n\tat httprequest.HttpRequest.verifyJsonSchema(HttpRequest.java:600)\n\tat microservices.contract.steps.ContractSteps.verifyJsonSchemaContract(ContractSteps.java:33)\n\tat tests.contract.TestJsonSchema.getListParamSuccess(TestJsonSchema.java:44)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[],"attachments":[],"parameters":[{"name":"response","value":"io.restassured.internal.RestAssuredResponseImpl@6f3478d4"},{"name":"schemaJsonPath","value":"schema/contractSchema/listContractSchema.json"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[{"name":"tearDown","time":{"start":1687168113250,"stop":1687168113250,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"postconditions","time":{"start":1687168126120,"stop":1687168126120,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"package","value":"tests.contract.TestJsonSchema"},{"name":"testClass","value":"tests.contract.TestJsonSchema"},{"name":"testMethod","value":"getListParamSuccess"},{"name":"parentSuite","value":"Cardano Regression Suite"},{"name":"suite","value":"Cardano API test "},{"name":"subSuite","value":"tests.contract.TestJsonSchema"},{"name":"host","value":"fv-az168-309"},{"name":"thread","value":"2450@fv-az168-309.TestNG-test=Cardano API test -2(13)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"epic","value":"cardano"},{"name":"feature","value":"api-contract"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"2"},{"name":"arg1","value":"2"},{"name":"arg2","value":""},{"name":"env","value":"mainnet"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7a9562f514e7d9b8.json","parameterValues":["2","2","","mainnet"]}